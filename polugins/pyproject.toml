[tool.poetry]
name = "polugins"
version = "0.2.0"
description = "Plugin system for Polars."
authors = ["StefanBRas <opensource@bruhn.io>"]
readme = "README.md"
packages = [{include = "polugins", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9" # 3.8 cannot be used because we use ast.unparse
polars = ">0.16.13"
importlib-metadata = "^6.6.0"
importlib-resources = "^5.12.0"
typing-extensions = "^4.6.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
example-package = {path = "tests/pkgs/example_package"}
black = "^23.3.0"
ruff = "^0.0.277"
nox = "^2023.4.22"
pytest = "^7.3.1"
pytest-env = "^0.8.2"
pytest-cov = "^4.1.0"
coverage = "^7.2.7"

[tool.poetry.group.nox]
optional = true

[tool.poetry.group.nox.dependencies]
nox = "^2023.4.22"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.polugins.lazyframe]
"pyproject" = "polugins._testing.namespaces:PyProjectNameSpace"

[tool.poetry.scripts]
polugins = 'polugins.cli:cli'

[tool.pytest.ini_options]
env = [
 "polugins_lazyframe_env=polugins._testing.namespaces:EnvNameSpace"
]


[tool.ruff]
include = ["*.py"]
line-length = 100

select = [
"E",
"F",
"I",
"PTH", # use pathlib
"RUF",
"SIM", # simplify
"A", # name shadowing builtin
"C4", # comprehensions
"EM" # Err msg, asign to var first.
]
ignore = []
src = ["src"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

